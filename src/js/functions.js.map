{"version":3,"file":"functions.js","sources":["../../node_modules/@arguiot/broadcast.js/dist/broadcast.js","../../app/utils.js","../../app/Algorithms/ExposureNotification.js","../../app/Algorithms/DP3T.js","../../app/Persons/Person.js","../../app/Persons/Everyone.js","../../app/Server.js","../../app/Popup.js","../../app/Simulation.js","../../app/Controller.js","../../app/main.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.Broadcast = factory());\n}(this, (function () { 'use strict';\n\n\tclass BroadcastJSNotification {\n\t\tconstructor(name, object = null) {\n\t\t\tthis.name = name;\n\t\t\tthis.object = object;\n\t\t}\n\t}\n\tclass NotificationCenter {\n\t\tconstructor() {\n\t\t\tthis.observers = new Map();\n\t\t}\n\t\tget default() {\n\t\t\tconst exportGlobal = (name, object) => {\n\t\t\t\tif (typeof(global) !== \"undefined\") {\n\t\t\t\t\t// Node.js\n\t\t\t\t\tglobal[name] = object;\n\t\t\t\t} else if (typeof(window) !== \"undefined\") {\n\t\t\t\t\t// JS with GUI (usually browser)\n\t\t\t\t\twindow[name] = object;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Unkown run-time environment. Currently only browsers and Node.js are supported.\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (typeof BroadcastJS_Shared_Instance == \"undefined\") {\n\t\t\t\texportGlobal(\"BroadcastJS_Shared_Instance\", new NotificationCenter());\n\t\t\t}\n\t\t\treturn BroadcastJS_Shared_Instance\n\t\t}\n\t\taddObserver(name, callback, reference = null) {\n\t\t\tthis.observers.set(`${name}, ${reference}`, callback);\n\t\t}\n\t\tremoveObserver(name, reference = null) {\n\t\t\tthis.observers.delete(`${name}, ${reference}`);\n\t\t}\n\t\tpost(notification) {\n\t\t\tconst name = notification.name;\n\t\t\tfor (const n of this.observers.keys()) {\n\t\t\t\tif (n.split(\",\")[0] == name) {\n\t\t\t\t\tthis.observers.get(n)(notification.object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tvar index = {\n\t\tNotification: BroadcastJSNotification,\n\t\tNotificationCenter: new NotificationCenter()\n\t};\n\n\treturn index;\n\n})));\n","\n// Shared\nexport function startOfDay(date) {\n    const d = new Date(date)\n    d.setHours(0,0,0,0)\n    return d\n    // //Calculate start of day in UTC:\n    // const denominator = 1000 * 60 * 60 * 24;\n    // return new Date(((date.getTime() / denominator) | 0) * denominator);\n}\n\nexport function isSameDay(date1, date2) {\n    return startOfDay(date1).valueOf() === startOfDay(date2).valueOf();\n}\n\nexport function convertToUTC(date) {\n    //Simply convert by adding timezone offset. \n    //Resulting object may still have the \"wrong\" timezone set, but object can be used for displaying purposes.\n    const offset = date.getTimezoneOffset();\n    const utcDate = new Date(date);\n    utcDate.setMinutes(utcDate.getMinutes() + offset);\n    return utcDate;\n}\n\nDate.prototype.toUTCDateString = function() {\n    return convertToUTC(this).toLocaleDateString();\n}\n\nDate.prototype.toTimeString = function() {\n    const options = {\n        hour: '2-digit', \n        minute:'2-digit'\n    }\n    return this.toLocaleTimeString(navigator.language || navigator.userLanguage, options); // convertToUTC(this)\n}\n\n// Numbers of day to observe\nexport const OBSERVATION_DAYS = 14\n\nexport let observationStartTime = new Date();\nobservationStartTime.setDate(observationStartTime.getDate() - OBSERVATION_DAYS + 3); // So it doesn't get over 13. We set to 12 to be safe\nobservationStartTime = startOfDay(observationStartTime);\n\nexport function getDayForIndex(dayIndex) {\n    const day = new Date(observationStartTime);\n    day.setDate(day.getDate() + dayIndex);\n    return day;\n}\n\nexport function getMaxDayIndex() {\n    return OBSERVATION_DAYS - 1;  //(indices 0..OBSERVATION_DAYS-1)\n}","import { startOfDay } from \"../utils\"\n//Length of an epoch (in minutes):\nconst EPOCH_LENGTH = 10;\n\n//Number of epochs per day:\nconst NUM_EPOCHS_PER_DAY = Math.floor(24 * 60 / EPOCH_LENGTH);\n\n//Size of rolling proximity ids:\nconst ROLLING_PROXIMITY_ID_SIZE = 16;\n\n//Size of a Temporary Exposure Key:\nconst TEMPORARY_EXPOSURE_KEY_SIZE = 16;\n\nconst EN_RPIK = sjcl.codec.utf8String.toBits(\"EN-RPIK\");\nconst EN_RPI = sjcl.codec.utf8String.toBits(\"EN-RPI\");\nconst PAD_FILL = sjcl.codec.bytes.toBits(new Array(6).fill(0));\n\nexport default class ExposureNotification {\n\n    /**\n     * Creates a private initial key for a user.\n     * \n     * In \"Exposure Notification\", there are no initial keys.\n     */\n    createInitialKey() {\n        return null;\n    }\n\n    /**\n     * Returns list of \"daysCount\" subsequent day keys starting from day \"startDay\".\n     * Those keys are derived from user's private \"initialKey\".\n     * \n     * In \"Exposure Notification\", day keys are called \"Temporary Exposure Key\".\n     */\n    getSecretDayKeys(initialKey, startDay, daysCount) {\n        const dayKeys = [];\n        for (let dayIndex = 0; dayIndex < daysCount; dayIndex++) {\n            const randomWords = sjcl.random.randomWords(TEMPORARY_EXPOSURE_KEY_SIZE / 4);\n            const tek = sjcl.codec.bytes.fromBits(randomWords);\n            dayKeys.push(tek);\n        }\n        return dayKeys;\n    }\n\n    /**\n     * Generates one possible history of all broadcast IDs on one specific day.\n     * The \"day\" and corresponding \"dayKey\" are needed for deriving those IDs.\n     * \n     * In \"Exposure Notification\", broadcast IDs are called \"Rolling Proximity Identifiers\".\n     */\n    generateBroadcastHistoryForDay(day, dayKey) {\n        const rollingProxIds = this._getAllRollingProxIdsForDay(day, dayKey);\n        return rollingProxIds.map(entry => ({\n            time: entry.timeSlot,\n            broadcastId: entry.rpi\n        }));\n    }\n\n    /**\n     * Returns list of all broadcast IDs which can be derived from one day key. \n     * The parameter \"startDay\" corresponds to the parameter \"dayKey\".\n     * \n     * In \"Exposure Notification\", Rolling Proximity Identifiers of only one day can be derived from\n     * the Daily Tracing Key. \n     */\n    getAllBroadcastIdsFromDayKey(startDay, dayKey, maxDaysCount) {\n        const rollingProxIds = this._getAllRollingProxIdsForDay(startDay, dayKey);\n        return rollingProxIds.map(entry => ({\n            day: startDay,\n            broadcastId: entry.rpi\n        }));\n    }\n\n    /**\n     * Returns list of all day keys to report to the public server in case the user\n     * with \"initialKey\" reports himself as infected.\n     * \n     * In \"Exposure Notification\", day keys are not derived from an \"initial key\".\n     * Instead, the \"Temporary Exposure Key\" are randomly generated keys which are stored\n     * in the app of the person.\n     */\n    getAllDayKeysToReport(_, dayKeyStorage, startDay, startDayIndex, maxDaysCount) {\n        const dayKeys = [];\n        for (let dayIndex = startDayIndex; dayIndex < startDayIndex + maxDaysCount; dayIndex++) {\n            dayKeys.push({\n                dayIndex,\n                dayKey: dayKeyStorage(dayIndex)\n            });\n        }\n        return dayKeys;\n    }\n\n    _getAllRollingProxIdsForDay(day, dayKey) {\n        const dayStart = startOfDay(day);\n        const tek = sjcl.codec.bytes.toBits(dayKey);\n        const rpik = sjcl.misc.hkdf(tek, ROLLING_PROXIMITY_ID_SIZE * 8, null, EN_RPIK, sjcl.hash.sha256);\n        const aes = new sjcl.cipher.aes(rpik);\n\n        const timeSlots = [];\n        for (let epoch = 0; epoch < NUM_EPOCHS_PER_DAY; epoch++) {\n            const timeSlot = new Date(dayStart);\n            timeSlot.setMinutes(timeSlot.getMinutes() + epoch * EPOCH_LENGTH);\n            const enIntervalNumber = timeSlot.getTime() / (1000 * 60 * EPOCH_LENGTH) | 0;\n\n            const paddedData = sjcl.bitArray.concat(EN_RPI, PAD_FILL).concat([enIntervalNumber]);\n            const rpi = aes.encrypt(paddedData);\n\n            timeSlots.push({\n                timeSlot,\n                rpi: sjcl.codec.bytes.fromBits(rpi)\n            });\n        }\n\n        return timeSlots;\n    }\n}","import { startOfDay } from \"../utils\"\n//Fixed global default broadcast key for ephID generation:\nconst BROADCAST_KEY = \"broadcast key\";\n\n//Length of an epoch (in minutes):\nconst EPOCH_LENGTH = 15;\n\n//Number of epochs per day:\nconst NUM_EPOCHS_PER_DAY = Math.floor(24 * 60 / EPOCH_LENGTH);\n\n//Size of ephIDs:\nconst EPHID_SIZE = 16;\n\n//Size of a day key:\nconst DAY_KEY_SIZE = 32;\n\n//Library SJCL requires us to call this method in order to use CTR:\nsjcl.beware[\"CTR mode is dangerous because it doesn't protect message integrity.\"]();\n\nexport default class DP3T {\n\n    constructor() {\n        this.iv = sjcl.codec.hex.toBits(\"00000000000000000000000000000000\");\n        this.broadcastKey = sjcl.codec.utf8String.toBits(BROADCAST_KEY);\n    }\n\n    /**\n     * Creates a private initial key for a user.\n     */\n    createInitialKey() {\n        const randomWords = sjcl.random.randomWords(DAY_KEY_SIZE / 4);\n        return sjcl.codec.bytes.fromBits(randomWords);\n    }\n\n    /**\n     * Returns list of \"daysCount\" subsequent day keys starting from day \"startDay\".\n     * Those keys are derived from user's private \"initialKey\".\n     * \n     * In DP-3T, the actual start day is irrelevant.\n     */\n    getSecretDayKeys(initialKey, startDay, daysCount) {\n        const dayKeys = [];\n        let currentKey = initialKey;\n        dayKeys.push(currentKey);\n        for (let dayIndex = 0; dayIndex < daysCount - 1; dayIndex++) {\n            currentKey = this._hash(currentKey);\n            dayKeys.push(currentKey);\n        }\n        return dayKeys;\n    }\n\n    /**\n     * Generates one possible history of all broadcast IDs on one specific day.\n     * The \"day\" and corresponding \"dayKey\" are needed for deriving those IDs.\n     * \n     * In DP-3T, broadcast IDs are called EphId.\n     */\n    generateBroadcastHistoryForDay(day, dayKey) {\n        const ephIds = this._getAllEphIdsForDay(dayKey);\n        this._shuffle(ephIds);\n\n        const timeSlots = [];\n\n        let timeSlotIterator = startOfDay(day);\n        const nextDayStart = startOfDay(day);\n        nextDayStart.setDate(nextDayStart.getDate() + 1);\n        let index = 0;\n        while (timeSlotIterator < nextDayStart) {\n            timeSlots.push({\n                time: new Date(timeSlotIterator),\n                broadcastId: ephIds[index++]\n            });\n            timeSlotIterator.setMinutes(timeSlotIterator.getMinutes() + EPOCH_LENGTH);\n        }\n\n        return timeSlots;\n    }\n\n    /**\n     * Returns list of all broadcast IDs which can be derived from one day key. \n     * The parameter \"startDay\" corresponds to the parameter \"dayKey\".\n     * \n     * In DP-3T, EphIDs of all subsequent days after \"startDay\" can be derived. \n     * Only up to \"maxDaysCount\" days will be derived.\n     */\n    getAllBroadcastIdsFromDayKey(startDay, dayKey, maxDaysCount) {\n        const ephIdsList = [];\n        for (let dayIndex = 0; dayIndex < maxDaysCount; dayIndex++) {\n            const ephIds = this._getAllEphIdsForDay(dayKey);\n            const day = new Date(startDay);\n            day.setDate(day.getDate() + dayIndex);\n            ephIds.forEach(ephId => ephIdsList.push({\n                day,\n                broadcastId: ephId\n            }));\n            dayKey = this._hash(dayKey);\n        }\n        return ephIdsList;\n    }\n\n    /**\n     * Returns list of all day keys to report to the public server in case the user\n     * with \"initialKey\" reports himself as infected.\n     * \n     * In DP-3T, only the day key of the day on which the infection started needs to be reported,\n     * because day keys of all subsequent days can be derived automatically from it.\n     */\n    getAllDayKeysToReport(initialKey, _, startDay, startDayIndex, maxDaysCount) {\n        let dayKey = initialKey;\n        for (let dayIndex = 0; dayIndex < startDayIndex; dayIndex++) {\n            dayKey = this._hash(dayKey);\n        }\n        return [{\n            dayIndex: startDayIndex,\n            dayKey\n        }];\n    }\n\n    _hash(key) {\n        const data = sjcl.codec.bytes.toBits(key);\n        const hash = sjcl.hash.sha256.hash(data);\n        return sjcl.codec.bytes.fromBits(hash);\n    }\n\n    _getAllEphIdsForDay(dayKey) {\n        //Compare this to https://github.com/DP-3T/reference_implementation/blob/master/LowCostDP3T.py\n        const hmac = new sjcl.misc.hmac(sjcl.codec.bytes.toBits(dayKey), sjcl.hash.sha256);\n        const prf = hmac.encrypt(this.broadcastKey);\n        const aes = new sjcl.cipher.aes(prf);\n        const stream = sjcl.codec.bytes.toBits(new Array(EPHID_SIZE * NUM_EPOCHS_PER_DAY).fill(0));\n        const prg = sjcl.mode.ctr.encrypt(aes, stream, this.iv);\n\n        const ephIds = [];\n        //Slice the PRG into ephIds of EPHID_SIZE bytes: \n        for (let epoch = 0; epoch < NUM_EPOCHS_PER_DAY; epoch++) {\n            const offset = epoch * EPHID_SIZE * 8;\n            const ephId = sjcl.bitArray.bitSlice(prg, offset, offset + EPHID_SIZE * 8);\n            ephIds.push(sjcl.codec.bytes.fromBits(ephId));\n        }\n\n        return ephIds;\n    }\n\n    _shuffle(array) {\n        //Taken from https://github.com/Daplie/knuth-shuffle/\n        var currentIndex = array.length,\n            temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n}","import ExposureNotification from \"../Algorithms/ExposureNotification\";\nimport DP3T from \"../Algorithms/DP3T\"\nimport { OBSERVATION_DAYS, getDayForIndex } from \"../utils\"\n\nclass Person {\n    constructor(mode) {\n        this.x = 75;\n        this.y = 75;\n\n        this.minX = 10;\n        this.maxX = 140;\n        this.minY = 10;\n        this.maxY = 140;\n\n        this.contagious = false;\n        this.alerted = false;\n\n        this.broadcastHistory = Array(OBSERVATION_DAYS - 1).fill(null);\n        this.heard = new Set();\n\n        this.vx = 1;\n        this.vy = 1;\n        this.d = Math.random() * (2 * Math.PI);\n\n        this.receivedNotification = false\n\n        this.wave = 0;\n\n        this.isPark = false\n\n        this.setAlgo({\n            mode: mode\n        })\n    }\n\n    notify(notif) {\n        if (notif.from == this.name) {\n            return\n        }\n        Array.from(this.heard).forEach(broadcast => {\n            if (broadcast != null && broadcast.slot == notif.slot && this.receivedNotification == false) {\n                return alert(glot.get(\"notify\", {\n                    name: this.name\n                }))\n            }\n        })\n    }\n\n    setAlgo(notif) {\n        this.mode = notif.mode\n        this.algo = notif.mode == \"dp3t\" ? new DP3T() : new ExposureNotification()\n\n        this.initial = this.algo.createInitialKey()\n        this.broadcastHistory = Array(OBSERVATION_DAYS - 1).fill(null)\n        this.heard = new Set();\n        this.secretDayKeys = null\n        this._generateSecretDayKey()\n    }\n    day(today) {\n        this._generateSecretDayKey()\n        return this.secretDayKeys[today]\n    }\n\n    update() {\n        this.x += this.vx * Math.cos(this.d);\n        this.y += this.vy * Math.sin(this.d);\n        if (this.x >= this.maxX || this.x <= this.minX) {\n            this.vx = -this.vx;\n        }\n        if (this.y >= this.maxY || this.y <= this.minY) {\n            this.vy = -this.vy;\n        }\n\n        this.wave += 0.3;\n        if (this.wave >= 20) {\n            this.wave = 0;\n        }\n    }\n\n    goToPark() {\n        this.pastMinX = this.minX;\n        this.pastMaxX = this.maxX;\n        this.pastMinY = this.minY;\n        this.pastMaxY = this.maxY;\n        this.pastX = this.x;\n        this.pastY = this.y;\n\n        this.minX = 10;\n        this.maxX = 290;\n\n        this.minY = 160;\n        this.maxY = 290;\n\n        this.y += 150;\n\n        this.isPark = true\n    }\n\n    goToHouse() {\n        this.x = this.pastX;\n        this.y = this.pastY;\n\n        this.minX = this.pastMinX;\n        this.maxX = this.pastMaxX;\n        this.minY = this.pastMinY;\n        this.maxY = this.pastMaxY;\n\n        this.isPark = false\n    }\n\n    pause() {\n        this.pastVx = this.vx\n        this.pastVy = this.vy\n\n        this.vx = 0\n        this.vy = 0\n    }\n\n    play() {\n        this.vx = this.pastVx\n        this.vy = this.pastVy\n    }\n\n    getBroadcastHistory(dayIndex) {\n        if (!this.broadcastHistory[dayIndex]) {\n            this.broadcastHistory[dayIndex] = this._generateBroadcastHistory(dayIndex);\n        }\n\n        return this.broadcastHistory[dayIndex];\n    }\n    getDayKeys() {\n        for (let i = 0; i < OBSERVATION_DAYS; i++) {\n            this.day(i)\n        }\n        return this.secretDayKeys.map((id, i) => {\n            return {\n                time: getDayForIndex(i),\n                broadcastId: id\n            }\n        })\n    }\n    generateBroadcastHistoryFull() {\n        for (let i = 0; i < OBSERVATION_DAYS; i++) {\n            this.getBroadcastHistory(i)\n        }\n        return this.broadcastHistory\n    }\n    _generateSecretDayKey() {\n        if (!this.secretDayKeys) {\n            const startTime = getDayForIndex(0);\n            this.secretDayKeys = this.algo.getSecretDayKeys(this.initial, startTime, OBSERVATION_DAYS + 1);\n        }\n    }\n\n    _generateBroadcastHistory(dayIndex) {\n        this._generateSecretDayKey();\n        const dayKey = this.secretDayKeys[dayIndex];\n\n        const timeSlots = [];\n        const day = getDayForIndex(dayIndex);\n        this.algo.generateBroadcastHistoryForDay(day, dayKey).forEach(slot =>\n            timeSlots.push({\n                time: slot.time,\n                broadcastId: slot.broadcastId,\n                hadContact: false\n            })\n        );\n        return {\n            day,\n            dayKey,\n            timeSlots\n        };\n    }\n}\n\nexport default Person","import Broadcast from \"@arguiot/broadcast.js\"\nconst { NotificationCenter, Notification } = Broadcast\n\nimport Person from \"./Person\"\n\nclass Bob extends Person {\n    constructor() {\n        super(...arguments);\n\n        this.name = \"Bob\"\n\n        this.x = 75;\n        this.y = 95;\n\n        this.minX = 10;\n        this.maxX = 140;\n        this.minY = 85;\n        this.maxY = 140;\n\n        this.contagious = false;\n        this.alerted = false;\n        this.past = new Set();\n        this.heard = new Set();\n        this.d = Math.random() * (2 * Math.PI);\n\n        this.color = \"#1277EB\"\n\n        NotificationCenter.default.addObserver(\"mode\", this.setAlgo.bind(this), this.name)\n\n        NotificationCenter.default.addObserver(\"server\", this.notify.bind(this), this.name)\n    }\n}\n\nclass Alice extends Person {\n    constructor() {\n        super(...arguments);\n\n        this.name = \"Alice\"\n\n        this.x = 225;\n        this.y = 95;\n\n        this.minX = 160;\n        this.maxX = 290;\n        this.minY = 85;\n        this.maxY = 140;\n\n        this.contagious = true;\n        this.alerted = false;\n        this.past = new Set();\n        this.heard = new Set();\n\n        this.d = Math.random() * (2 * Math.PI);\n\n        this.color = \"#F66A09\"\n\n        NotificationCenter.default.addObserver(\"mode\", this.setAlgo.bind(this), this.name)\n\n        NotificationCenter.default.addObserver(\"server\", this.notify.bind(this), this.name)\n    }\n}\n\nclass Charlie extends Person {\n    constructor() {\n        super(...arguments);\n\n        this.name = \"Charlie\"\n\n        this.x = 225;\n        this.y = 50;\n\n        this.minX = 160;\n        this.maxX = 290;\n        this.minY = 10;\n        this.maxY = 65;\n\n        this.contagious = false;\n        this.alerted = false;\n        this.past = new Set();\n        this.heard = new Set();\n\n        this.d = Math.random() * (2 * Math.PI);\n\n        this.color = \"#65CE60\"\n\n        NotificationCenter.default.addObserver(\"mode\", this.setAlgo.bind(this), this.name)\n\n        NotificationCenter.default.addObserver(\"server\", this.notify.bind(this), this.name)\n    }\n}\n\nclass David extends Person {\n    constructor() {\n        super(...arguments);\n\n        this.name = \"David\"\n\n        this.x = 75;\n        this.y = 35;\n\n        this.minX = 10;\n        this.maxX = 140;\n        this.minY = 10;\n        this.maxY = 65;\n\n        this.contagious = false;\n        this.alerted = false;\n        this.past = new Set();\n        this.heard = new Set();\n\n        this.d = Math.random() * (100);\n\n        this.color = \"#F2C94C\"\n\n        NotificationCenter.default.addObserver(\"mode\", this.setAlgo.bind(this), this.name)\n\n        NotificationCenter.default.addObserver(\"server\", this.notify.bind(this), this.name)\n    }\n}\n\nexport { Bob, Alice, Charlie, David }","import Broadcast from \"@arguiot/broadcast.js\"\nconst { NotificationCenter, Notification } = Broadcast\n\nclass Server {\n    constructor() {\n        this.slots = []\n        this.dayKeys = []\n    }\n    addKeys(name, slots, dayKeys) {\n        this.dayKeys.push(...dayKeys)\n        const Slots = slots.map(el => el.timeSlots)\n        const array = [].concat.apply([], Slots)\n        array.forEach(slot => {\n            if (slot.hadContact == true) {\n                this.slots.push(slot)\n                const msg = new Notification(\"server\", {\n                    slot: slot,\n                    from: name\n                })\n                NotificationCenter.default.post(msg)\n            }\n        })\n    }\n    display(popup) {\n        popup.show(glot.get(\"serverdata\"), () => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve(this.dayKeys.map(el => {\n                        el.name = el.time.toLocaleDateString()\n                        el.value = con.sim.toHex(el.broadcastId)\n                        return el\n                    }))\n                }, 0)\n            })\n        })\n    }\n}\n\nexport default Server","class Popup {\n    constructor() {\n        this.state = false\n\n        this.el = document.querySelector(\".popup\");\n        this.listen()\n    }\n    listen() {\n        this.el.querySelector(\".cross\").addEventListener(\"click\", e => {\n            this.state = false\n            this.render()\n        })\n        this.el.addEventListener(\"click\", e => {\n            if (e.target == e.currentTarget) {\n                this.state = false\n                this.render()\n            }\n        })\n    }\n\n    displayData(title, data) {\n        this.show(title, () => {\n            return new Promise((resolve, reject) => resolve(data))\n        })\n    }\n\n    show(title, promise) {\n        this.state = true\n        this.render()\n\n        // Putting elements\n        this.el.querySelector(\".title\").innerHTML = title\n\n        this.el.querySelector(\".container\").innerHTML = \"<div class=\\\"center\\\">Loading...</div>\"\n\n        promise().then(data => {\n            // Reset\n            this.el.querySelector(\".container\").innerHTML = \"\"\n\n            if (data.length == 0) {\n                this.el.querySelector(\".container\").innerHTML = \"<div class=\\\"center\\\">No data</div>\"\n            }\n            data.forEach(row => {\n                this.el.querySelector(\".container\").innerHTML += `<div class=\"row\">\n                <div class=\"variable\">${row.name}</div>\n                <div class=\"value\">${row.value}</div>\n                </div>`\n            })\n        })\n    }\n\n    render() {\n        if (this.state == true) {\n            this.el.style.display = \"flex\"\n        } else {\n            this.el.style.display = \"none\"\n        }\n    }\n}\n\nexport default Popup","import { getDayForIndex } from \"./utils\"\n\nclass Simulation {\n    constructor(bob, alice, charlie, david) {\n        this.bob = bob;\n        this.alice = alice;\n        this.charlie = charlie\n        this.david = david\n\n        this.panelState = 0;\n\n        this.isPark = false;\n\n        this.canvas = document.getElementById(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.el = document.querySelector(\".app\")\n\n        this.resize()\n\n        window.addEventListener('resize', this.resize.bind(this))\n\n        this.draw();\n\n        this.interval = setInterval(this.panel.bind(this), 1000);\n\n        this.panelListeners()\n    }\n\n    resize() {\n        let scale = 1\n        if (window.matchMedia && window.matchMedia('(min-width: 960px)').matches) {\n            scale = 4 / 3\n        }\n\n        const canvasWidth = 300 * scale;\n        const canvasHeight = 300 * scale;\n\n        this.canvas.width = canvasWidth * window.devicePixelRatio;\n        this.canvas.height = canvasHeight * window.devicePixelRatio;\n\n        this.ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n            \n    draw() {\n        this.monitor();\n\n        // Update\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        // Scale\n        let scale = 1\n        if (window.matchMedia && window.matchMedia('(min-width: 960px)').matches) {\n            scale = 4 / 3\n        }\n        // Layout\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            this.ctx.fillStyle = \"#fff\";\n            this.ctx.strokeStyle = \"#fff\";\n        } else {\n            this.ctx.fillStyle = \"#000\";\n            this.ctx.strokeStyle = \"#000\";\n        }\n        this.ctx.lineWidth = 5 * scale;\n        this.ctx.strokeRect(0, 0, 300 * scale, 300 * scale);\n        this.ctx.strokeRect(0, 0, 150 * scale, 75 * scale);\n        this.ctx.strokeRect(0, 75 * scale, 150 * scale, 75 * scale);\n        this.ctx.strokeRect(150 * scale, 0, 150 * scale, 75 * scale);\n        this.ctx.strokeRect(150 * scale, 75 * scale, 150 * scale, 75 * scale);\n        // Text\n        this.ctx.font = `${12 * scale}px sans-serif`;\n\n        this.ctx.fillText(glot.get(\"park\"), 135 * scale, 285 * scale);\n\n        this.ctx.fillStyle = this.bob.color;\n        this.ctx.fillText(glot.get(\"house\", {\n            name: \"Bob\"\n        }), 41 * scale, 130 * scale, 70 * scale);\n        this.ctx.fillStyle = this.alice.color;\n        this.ctx.fillText(glot.get(\"house\", {\n            name: \"Alice\"\n        }), 185 * scale, 130 * scale, 80 * scale);\n        this.ctx.fillStyle = this.charlie.color;\n        this.ctx.fillText(glot.get(\"house\", {\n            name: \"Charlie\"\n        }), 180 * scale, 60 * scale);\n        this.ctx.fillStyle = this.david.color;\n        this.ctx.fillText(glot.get(\"house\", {\n            name: \"David\"\n        }), 35 * scale, 60 * scale);\n\n        // Persons\n        this.ctx.lineWidth = 2 * scale;\n\n        [this.bob, this.alice, this.charlie, this.david].forEach(p => {\n            this.ctx.beginPath();\n            this.ctx.arc(p.x * scale, p.y * scale, 6 * scale, 0, Math.PI * 2, true); // Inner circle\n            this.ctx.fillStyle = p.color;\n            this.ctx.fill();\n\n            this.ctx.beginPath();\n            this.ctx.arc(p.x * scale, p.y * scale, p.wave * scale, 0, Math.PI * 2, true); // Outer circle\n            this.ctx.globalAlpha = 1 - p.wave / 25;\n            this.ctx.strokeStyle = \"#76B7FF\";\n            this.ctx.stroke();\n            this.ctx.globalAlpha = 1;\n\n            if (p.contagious) {\n                this.ctx.beginPath();\n                this.ctx.arc(p.x * scale, p.y * scale, 8.5 * scale, 0, Math.PI * 2, true); // Outer circle\n                this.ctx.strokeStyle = \"#DD3D12\";\n                this.ctx.stroke();\n            }\n\n            p.update()\n        })\n        // Redraw\n        this.animationFrame = window.requestAnimationFrame(this.draw.bind(this));\n    }\n\n    monitor() {\n        const persons = [this.bob, this.alice, this.david, this.charlie]\n        persons.filter(person => person.isPark).forEach(p => {\n            persons.filter(person => person.isPark).forEach(pp => {\n                if (p == pp) {\n                    return\n                }\n                const diffX = p.x - pp.x;\n                const diffY = p.y - pp.y;\n\n                const dist = Math.sqrt(diffX * diffX + diffY * diffY);\n                if (dist <= 40) {\n                    this.contact(p, pp)\n                }\n            })\n        })\n    }\n\n    panel() {\n        const i = this.panelState\n        const persons = [this.bob, this.alice, this.charlie, this.david]\n        // Values\n\n        document.querySelector(\".contagious\").innerHTML = glot.get(persons[i].contagious);\n        document.querySelector(\".alerted\").innerHTML = glot.get(persons[i].alerted);\n        document.querySelector(\".initial\").innerHTML = this.toHex(persons[i].initial).substring(0, 10) + \"...\";\n        document.querySelector(\".initial\").title = this.toHex(persons[i].initial)\n        document.querySelector(\".day\").innerHTML = this.toHex(persons[i].day(this.dayIndex)).substring(0, 10) + \"...\";\n        document.querySelector(\".day\").title = this.toHex(persons[i].day(this.dayIndex))\n\n        // Interaction\n\n        document.querySelector(\".row > .goto\").innerHTML = persons[i].isPark == true ? glot.get(\"gohouse\") : glot.get(\"gopark\")\n        document.querySelector(\".row > .test\").innerHTML = persons[i].alerted == false ? glot.get(\"testcovid\") : glot.get(\"publishcovid\")\n    }\n\n    panelListeners() {\n        const persons = [this.bob, this.alice, this.charlie, this.david]\n\n        document.querySelector(\".row > .goto\").addEventListener(\"click\", e => {\n            const i = this.panelState\n            if (persons[i].isPark == true) {\n                persons[i].goToHouse()\n            } else {\n                persons[i].goToPark()\n            }\n            this.panel()\n        })\n        document.querySelector(\".row > .test\").addEventListener(\"click\", e => {\n            const i = this.panelState\n            if (persons[i].alerted == true) {\n                // Publish\n                this.server.addKeys(persons[i].name, persons[i].generateBroadcastHistoryFull(), persons[i].getDayKeys())\n            } else if (persons[i].contagious == true) {\n                persons[i].alerted = true\n                alert(glot.get(\"gotest\", {\n                    name: persons[i].name,\n                    result: glot.get(\"gotesttrue\")\n                }))\n            } else {\n                alert(glot.get(\"gotest\", {\n                    name: persons[i].name,\n                    result: glot.get(\"gotestfalse\")\n                }))\n            }\n            this.panel()\n        })\n\n        document.querySelector(\".past.show\").addEventListener(\"click\", e => {\n            const i = this.panelState\n            this.popup.show(glot.get(\"namepast\", {\n                name: persons[i].name\n            }), () => {\n                return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        resolve(persons[i].getBroadcastHistory(this.dayIndex).timeSlots.map(el => {\n                            el.name = el.time.toTimeString()\n                            el.value = this.toHex(el.broadcastId)\n                            return el\n                        }))\n                    }, 0);\n                })\n            })\n        })\n\n        document.querySelector(\".heard.show\").addEventListener(\"click\", e => {\n            const i = this.panelState\n            this.popup.displayData(glot.get(\"nameheard\", {\n                name: persons[i].name\n            }), Array.from(persons[i].heard).map(el => {\n                el.name = `${el.duration}min${el.duration > 1 ? 's' : ''} at ${el.slot.time.toTimeString()}`\n                el.value = this.toHex(el.slot.broadcastId)\n                return el\n            }))\n        })\n    }\n\n    contact(p1, p2) {\n        // Get correct ephID\n        const getSlot = p => {\n            const broadcastHistory = p.getBroadcastHistory(this.dayIndex)\n            const length = broadcastHistory.timeSlots.length - 1\n            let i = 0\n            while (i <= length && broadcastHistory.timeSlots[i].time < new Date()) {\n                i += 1\n            }\n            const index = i > 0 ? i - 1 : 0\n            return [broadcastHistory.timeSlots[index], index]\n        }\n        const slot1 = getSlot(p1)\n        const slot2 = getSlot(p2)\n\n        const todayBroadcast = p1.broadcastHistory[this.dayIndex]\n        if (Array.from(p1.heard).map(el => el.slot).includes(slot2[0]) || Array.from(p2.heard).map(el => el.slot).includes(slot1[0])) {\n            return\n        }\n\n        let result = window.prompt(glot.get(\"meeting\", {\n            p1,\n            p2\n        }), 5)\n\n        if (result == null || isNaN(parseInt(result))) { // In case the user tap cancel\n            result = 5\n        }\n\n        p1.broadcastHistory[this.dayIndex].timeSlots[slot1[1]].hadContact = true\n        p2.broadcastHistory[this.dayIndex].timeSlots[slot2[1]].hadContact = true\n\n        p1.heard.add({\n            duration: parseInt(result),\n            slot: slot2[0]\n        })\n        p2.heard.add({\n            duration: parseInt(result),\n            slot: slot1[0]\n        })\n        if (p1.contagious == true || p2.contagious == true) {\n            if (p1.contagious == true) {\n                p2.contagious = true;\n            } else {\n                p1.contagious = true;\n            }\n        }\n        // Finally, we update the date\n        this.today = new Date(this.today.getTime() + 1000 * 60 * parseInt(result))\n\n        if (tour.isActive()) {\n            tour.next()\n        }\n    }\n\n    // UTILS\n    removeListeners(el) {\n        var newEl = el.cloneNode(false);\n        while (el.hasChildNodes()) newEl.appendChild(el.firstChild);\n        el.parentNode.replaceChild(newEl, el);\n    }\n    toHex(byteArray) {\n        if (byteArray == null) {\n            return \"null\"\n        }\n        return byteArray.map(b => b.toString(16).padStart(2, '0')).join('').toUpperCase();\n    }\n    get dayIndex() {\n        const oneDay = 24 * 60 * 60 * 1000;\n        const dayK = Math.floor(Math.abs((this.today - getDayForIndex(0)) / oneDay))\n        return dayK\n    }\n}\n\nexport default Simulation","import { Bob, Alice, Charlie, David } from \"./Persons/Everyone\"\nimport Server from \"./Server\"\nimport Popup from \"./Popup\"\nimport Simulation from \"./Simulation\"\nimport Broadcast from \"@arguiot/broadcast.js\"\nconst { NotificationCenter, Notification } = Broadcast\n\nimport {\n    isSameDay,\n    getDayForIndex\n} from \"./utils\"\n\nclass Controller {\n    constructor(protocol = \"dp3t\") {\n        this.init(protocol)\n    }\n\n    init(protocol = \"dp3t\") {\n        const bob = new Bob(protocol)\n        const alice = new Alice(protocol)\n        const charlie = new Charlie(protocol)\n        const david = new David(protocol)\n        this.sim = new Simulation(bob, alice, charlie, david);\n\n        this.state = 0;\n\n        this.sim.mode = protocol\n        this.sim.today = new Date()\n\n        this.sim.popup = new Popup()\n\n        this.sim.server = new Server()\n\n        this.selector();\n        this.listen();\n        this.date()\n    }\n\n    date() {\n        const options = {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        };\n        document.querySelector(\".today\").innerHTML = this.sim.today.toLocaleDateString(navigator.language || navigator.userLanguage, options)\n        document.querySelector(\".now\").innerHTML = this.sim.today.toTimeString()\n\n        document.querySelector(\".control .past\").addEventListener(\"click\", e => {\n            if (isSameDay(this.sim.today, getDayForIndex(0))) {\n                alert(\"Can't go past the initial date.\")\n                return\n            }\n            this.sim.today = new Date(this.sim.today.getTime() - 1000 * 60 * 60 * 24) // -1 day\n            const options = {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            };\n            document.querySelector(\".today\").innerHTML = this.sim.today.toLocaleDateString(navigator.language || navigator.userLanguage, options)\n            document.querySelector(\".now\").innerHTML = this.sim.today.toTimeString()\n        })\n        document.querySelector(\".control .future\").addEventListener(\"click\", e => {\n            if (isSameDay(this.sim.today, getDayForIndex(13))) {\n                alert(\"Can't go any further. Sorry.\")\n                return\n            }\n            this.sim.today = new Date(this.sim.today.getTime() + 1000 * 60 * 60 * 24) // +1 day\n            const options = {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            };\n            document.querySelector(\".today\").innerHTML = this.sim.today.toLocaleDateString(navigator.language || navigator.userLanguage, options)\n            document.querySelector(\".now\").innerHTML = this.sim.today.toTimeString()\n        })\n\n        document.querySelector(\".control .plus-min\").addEventListener(\"click\", e => {\n            if (isSameDay(this.sim.today, getDayForIndex(0))) {\n                alert(\"Can't go past the initial date.\")\n                return\n            }\n            this.sim.today = new Date(this.sim.today.getTime() + 5 * 60 * 1000) // + 5 min\n            const options = {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            };\n            document.querySelector(\".today\").innerHTML = this.sim.today.toLocaleDateString(navigator.language || navigator.userLanguage, options)\n            document.querySelector(\".now\").innerHTML = this.sim.today.toTimeString()\n        })\n        document.querySelector(\".control .minus-min\").addEventListener(\"click\", e => {\n            if (isSameDay(this.sim.today, getDayForIndex(13))) {\n                alert(\"Can't go any further. Sorry.\")\n                return\n            }\n            this.sim.today = new Date(this.sim.today.getTime() - 5 * 60 * 1000) // - 5 min\n            const options = {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            };\n            document.querySelector(\".today\").innerHTML = this.sim.today.toLocaleDateString(navigator.language || navigator.userLanguage, options)\n            document.querySelector(\".now\").innerHTML = this.sim.today.toTimeString()\n        })\n    }\n\n    listen() {\n        // Bottom Segmented Control\n        document.querySelectorAll(\".app > .selector > div\").forEach((el, i) => {\n            el.addEventListener(\"click\", (e) => {\n                this.state = i;\n                this.selector();\n            });\n        })\n        // Panel Segmented Control\n        document.querySelectorAll(\".panel > .selector > div\").forEach((el, i) => {\n            el.addEventListener(\"click\", (e) => {\n                this.sim.panelState = i;\n                this.sim.panel();\n                glot.render(\"auto\", document.querySelector(\".app\"))\n                this.selector();\n            });\n        })\n        // Server\n        document.querySelector(\".server.show\").addEventListener(\"click\", e => {\n            this.sim.server.display(this.sim.popup)\n        })\n    }\n    selector() {\n        // Bottom Segmented Control\n        document.querySelectorAll(\".app > .selector > div\").forEach((el, i) => {\n            if (this.state == i) {\n                // Active\n                el.classList.add(\"active\");\n                document.querySelector(`.show-${i}`).style.display = \"block\";\n            } else {\n                // Inactive\n                el.classList.remove(\"active\");\n                document.querySelector(`.show-${i}`).style.display = \"none\";\n            }\n        })\n        // Panel\n        document.querySelectorAll(\".panel > .selector > div\").forEach((el, i) => {\n            if (this.sim.panelState == i) {\n                // Active\n                el.classList.add(\"active\");\n            } else {\n                // Inactive\n                el.classList.remove(\"active\");\n            }\n        })\n    }\n\n    goToPark() {\n        this.sim.isPark = true;\n        [this.sim.bob, this.sim.alice, this.sim.charlie, this.sim.david].forEach(person => {\n            person.goToPark();\n        })\n    }\n    goToHouse() {\n        this.sim.isPark = false;\n        [this.sim.bob, this.sim.alice, this.sim.charlie, this.sim.david].forEach(person => {\n            person.goToHouse();\n        })\n    }\n\n    changeMode(mode) {\n        this.sim.mode = mode\n        const msg = new Notification(\"mode\", {\n            mode: mode\n        })\n\n        NotificationCenter.default.post(msg)\n    }\n}\n\nexport default Controller","import Controller from \"./Controller\"\n\nlet con = new Controller();\n\ncon.reset = (protocol = \"dp3t\") => {\n    clearInterval(con.sim.interval)\n    cancelAnimationFrame(con.sim.animationFrame)\n\n    document.querySelector(\"select\").value = protocol // So the selector value is the same\n\n    con.init(protocol)\n}\n\nexport default con"],"names":["global","factory","module","this","BroadcastJSNotification","name","object","NotificationCenter","observers","Map","callback","reference","set","notification","keys","n","split","get","exportGlobal","window","Error","BroadcastJS_Shared_Instance","index","Notification","startOfDay","date","d","Date","setHours","isSameDay","date1","date2","valueOf","convertToUTC","offset","getTimezoneOffset","utcDate","setMinutes","getMinutes","prototype","toUTCDateString","toLocaleDateString","toTimeString","options","hour","minute","toLocaleTimeString","navigator","language","userLanguage","OBSERVATION_DAYS","observationStartTime","setDate","getDate","getDayForIndex","dayIndex","day","EPOCH_LENGTH","NUM_EPOCHS_PER_DAY","Math","floor","ROLLING_PROXIMITY_ID_SIZE","TEMPORARY_EXPOSURE_KEY_SIZE","EN_RPIK","sjcl","codec","utf8String","toBits","EN_RPI","PAD_FILL","bytes","Array","fill","ExposureNotification","initialKey","startDay","daysCount","dayKeys","randomWords","random","tek","fromBits","push","dayKey","rollingProxIds","_getAllRollingProxIdsForDay","map","entry","time","timeSlot","broadcastId","rpi","maxDaysCount","_","dayKeyStorage","startDayIndex","dayStart","rpik","misc","hkdf","hash","sha256","aes","cipher","timeSlots","epoch","enIntervalNumber","getTime","paddedData","bitArray","concat","encrypt","BROADCAST_KEY","EPHID_SIZE","DAY_KEY_SIZE","beware","DP3T","iv","hex","broadcastKey","currentKey","_hash","ephIds","_getAllEphIdsForDay","_shuffle","timeSlotIterator","nextDayStart","ephIdsList","forEach","ephId","key","data","hmac","prf","stream","prg","mode","ctr","bitSlice","array","currentIndex","length","temporaryValue","randomIndex","Person","x","y","minX","maxX","minY","maxY","contagious","alerted","broadcastHistory","heard","Set","vx","vy","PI","receivedNotification","wave","isPark","setAlgo","notif","from","broadcast","slot","alert","glot","algo","initial","createInitialKey","secretDayKeys","_generateSecretDayKey","today","cos","sin","pastMinX","pastMaxX","pastMinY","pastMaxY","pastX","pastY","pastVx","pastVy","_generateBroadcastHistory","i","id","getBroadcastHistory","startTime","getSecretDayKeys","generateBroadcastHistoryForDay","hadContact","Broadcast","Bob","arguments","past","color","addObserver","bind","notify","Alice","Charlie","David","Server","slots","Slots","el","apply","msg","post","popup","show","Promise","resolve","reject","setTimeout","value","con","sim","toHex","Popup","state","document","querySelector","listen","addEventListener","e","render","target","currentTarget","title","promise","innerHTML","then","row","style","display","Simulation","bob","alice","charlie","david","panelState","canvas","getElementById","ctx","getContext","resize","draw","interval","setInterval","panel","panelListeners","scale","matchMedia","matches","canvasWidth","canvasHeight","width","devicePixelRatio","height","monitor","clearRect","fillStyle","strokeStyle","lineWidth","strokeRect","font","fillText","p","beginPath","arc","globalAlpha","stroke","update","animationFrame","requestAnimationFrame","persons","filter","person","pp","diffX","diffY","dist","sqrt","contact","substring","goToHouse","goToPark","server","addKeys","generateBroadcastHistoryFull","getDayKeys","result","displayData","duration","p1","p2","getSlot","slot1","slot2","todayBroadcast","includes","prompt","isNaN","parseInt","add","tour","isActive","next","newEl","cloneNode","hasChildNodes","appendChild","firstChild","parentNode","replaceChild","byteArray","b","toString","padStart","join","toUpperCase","oneDay","dayK","abs","Controller","protocol","init","selector","year","month","querySelectorAll","classList","remove","reset","clearInterval","cancelAnimationFrame"],"mappings":"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"}